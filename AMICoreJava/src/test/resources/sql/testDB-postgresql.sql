-----------------------------------------------------------------------------

DROP VIEW IF EXISTS "FILE_VIEW";;
DROP TABLE IF EXISTS "DATASET_FILE_BRIDGE";;
DROP TABLE IF EXISTS "DATASET_PARAM";;
DROP TABLE IF EXISTS "FILE";;
DROP TABLE IF EXISTS "DATASET_GRAPH";;
DROP TABLE IF EXISTS "DATASET" CASCADE;;
DROP TABLE IF EXISTS "FILE_TYPE";;
DROP TABLE IF EXISTS "DATASET_TYPE";;
DROP TABLE IF EXISTS "PROJECT";;


-----------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION UPDATE_MODIFIED_FIELD()
  RETURNS TRIGGER AS $BODY$
  BEGIN
    NEW."modified" = now();

    RETURN NEW;
  END;

  $BODY$ LANGUAGE 'plpgsql'
;;


-----------------------------------------------------------------------------

CREATE TABLE "PROJECT" (
  "id" SERIAL,
  "name" VARCHAR(128) NOT NULL,
  "description" VARCHAR(512),
  "created" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "createdBy" VARCHAR(128) NOT NULL,
  "modified" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "modifiedBy" VARCHAR(128) NOT NULL
);;

ALTER TABLE "PROJECT"
  ADD CONSTRAINT "pk1_PROJECT" PRIMARY KEY ("id"),
  ADD CONSTRAINT "uk1_PROJECT" UNIQUE ("name")
;;

CREATE TRIGGER "trig1_PROJECT"
  BEFORE UPDATE ON "PROJECT"
  FOR EACH ROW
    EXECUTE PROCEDURE UPDATE_MODIFIED_FIELD()
;;

-----------------------------------------------------------------------------

CREATE TABLE "DATASET_TYPE" (
  "id" SERIAL,
  "projectFK" INT NOT NULL,
  "name" VARCHAR(128) NOT NULL,
  "description" VARCHAR(512),
  "photo" TEXT,
  "created" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "createdBy" VARCHAR(128) NOT NULL,
  "modified" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "modifiedBy" VARCHAR(128) NOT NULL
);;

ALTER TABLE "DATASET_TYPE"
  ADD CONSTRAINT "pk1_DATASET_TYPE" PRIMARY KEY ("id"),
  ADD CONSTRAINT "uk1_DATASET_TYPE" UNIQUE ("name","projectFK"),
  ADD CONSTRAINT "fk1_DATASET_TYPE" FOREIGN KEY ("projectFK") REFERENCES "PROJECT" ("id") ON DELETE CASCADE ON UPDATE NO ACTION
;;

CREATE TRIGGER "trig1_DATASET_TYPE"
  BEFORE UPDATE ON "DATASET_TYPE"
  FOR EACH ROW
    EXECUTE PROCEDURE UPDATE_MODIFIED_FIELD()
;;

-----------------------------------------------------------------------------

CREATE TABLE "FILE_TYPE" (
  "id" SERIAL,
  "projectFK" INT NOT NULL,
  "name" VARCHAR(128) NOT NULL,
  "description" VARCHAR(512),
  "created" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "createdBy" VARCHAR(128) NOT NULL,
  "modified" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "modifiedBy" VARCHAR(128) NOT NULL
);;

ALTER TABLE "FILE_TYPE"
  ADD CONSTRAINT "pk1_FILE_TYPE" PRIMARY KEY ("id"),
  ADD CONSTRAINT "fk1_FILE_TYP" FOREIGN KEY ("projectFK") REFERENCES "PROJECT" ("id") ON DELETE CASCADE ON UPDATE NO ACTION
;;

CREATE TRIGGER "trig1_FILE_TYPE"
  BEFORE UPDATE ON "FILE_TYPE"
  FOR EACH ROW
    EXECUTE PROCEDURE UPDATE_MODIFIED_FIELD()
;;

-----------------------------------------------------------------------------

CREATE TABLE "DATASET" (
  "id" SERIAL,
  "projectFK" INT NOT NULL,
  "typeFK" INT NOT NULL,
  "name" VARCHAR(128) NOT NULL,
  "valid" SMALLINT DEFAULT 1,
  "created" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "createdBy" VARCHAR(128) NOT NULL,
  "modified" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "modifiedBy" VARCHAR(128) NOT NULL
);;

ALTER TABLE "DATASET"
  ADD CONSTRAINT "pk1_DATASET" PRIMARY KEY ("id"),
  ADD CONSTRAINT "uk1_DATASET" UNIQUE ("name","projectFK"),
  ADD CONSTRAINT "fk1_DATASET" FOREIGN KEY ("projectFK") REFERENCES "PROJECT" ("id") ON DELETE CASCADE ON UPDATE NO ACTION,
  ADD CONSTRAINT "fk2_DATASET" FOREIGN KEY ("typeFK") REFERENCES "DATASET_TYPE" ("id") ON DELETE CASCADE ON UPDATE NO ACTION
;;

CREATE TRIGGER "trig1_DATASET"
  BEFORE UPDATE ON "DATASET"
  FOR EACH ROW
    EXECUTE PROCEDURE UPDATE_MODIFIED_FIELD()
;;

-----------------------------------------------------------------------------

CREATE TABLE "FILE" (
  "id" SERIAL,
  "typeFK" INT NOT NULL,
  "name" VARCHAR(128) NOT NULL,
  "size" INT,
  "created" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "createdBy" VARCHAR(128) NOT NULL,
  "modified" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "modifiedBy" VARCHAR(128) NOT NULL
);;

ALTER TABLE "FILE"
  ADD CONSTRAINT "pk1_FILE" PRIMARY KEY ("id"),
  ADD CONSTRAINT "uk1_FILE" UNIQUE ("name"),
  ADD CONSTRAINT "fk1_FILE" FOREIGN KEY ("typeFK") REFERENCES "FILE_TYPE" ("id") ON DELETE CASCADE ON UPDATE NO ACTION
;;

CREATE TRIGGER "trig1_FILE"
  BEFORE UPDATE ON "FILE"
  FOR EACH ROW
    EXECUTE PROCEDURE UPDATE_MODIFIED_FIELD()
;;

-----------------------------------------------------------------------------

CREATE TABLE "DATASET_FILE_BRIDGE" (
  "id" SERIAL,
  "datasetFK" INT NOT NULL,
  "fileFK" INT NOT NULL,
  "comment" VARCHAR(128),
  "created" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "createdBy" VARCHAR(128) NOT NULL,
  "modified" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "modifiedBy" VARCHAR(128) NOT NULL
);;

ALTER TABLE "DATASET_FILE_BRIDGE"
  ADD CONSTRAINT "pk1_DATASET_FILE_BRIDGE" PRIMARY KEY ("id"),
  ADD CONSTRAINT "uk1_DATASET_FILE_BRIDGE" UNIQUE ("datasetFK","fileFK"),
  ADD CONSTRAINT "fk1_DATASET_FILE_BRIDGE" FOREIGN KEY ("datasetFK") REFERENCES "DATASET" ("id") ON DELETE CASCADE ON UPDATE NO ACTION,
  ADD CONSTRAINT "fk2_DATASET_FILE_BRIDGE" FOREIGN KEY ("fileFK") REFERENCES "FILE" ("id") ON DELETE CASCADE ON UPDATE NO ACTION
;;

CREATE TRIGGER "trig1_DATASET_FILE_BRIDGE"
  BEFORE UPDATE ON "DATASET_FILE_BRIDGE"
  FOR EACH ROW
    EXECUTE PROCEDURE UPDATE_MODIFIED_FIELD()
;;

-----------------------------------------------------------------------------

CREATE TABLE "DATASET_GRAPH" (
  "id" SERIAL,
  "sourceFK" INT NOT NULL,
  "destinationFK" INT NOT NULL,
  "comment" VARCHAR(128),
  "created" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "createdBy" VARCHAR(128) NOT NULL,
  "modified" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "modifiedBy" VARCHAR(128) NOT NULL
);;

ALTER TABLE "DATASET_GRAPH"
  ADD CONSTRAINT "pk1_DATASET_GRAPH" PRIMARY KEY ("id"),
  ADD CONSTRAINT "uk1_DATASET_GRAPH" UNIQUE ("sourceFK","destinationFK"),
  ADD CONSTRAINT "fk1_DATASET_GRAPH" FOREIGN KEY ("sourceFK") REFERENCES "DATASET" ("id") ON DELETE CASCADE ON UPDATE NO ACTION,
  ADD CONSTRAINT "fk2_DATASET_GRAPH" FOREIGN KEY ("destinationFK") REFERENCES "DATASET" ("id") ON DELETE CASCADE ON UPDATE NO ACTION
;;

CREATE TRIGGER "trig1_DATASET_GRAPH"
  BEFORE UPDATE ON "DATASET_GRAPH"
  FOR EACH ROW
    EXECUTE PROCEDURE UPDATE_MODIFIED_FIELD()
;;

-----------------------------------------------------------------------------

CREATE TABLE "DATASET_PARAM" (
  "id" SERIAL,
  "datasetFK" INT NOT NULL,
  "name" VARCHAR(128) NOT NULL,
  "type" VARCHAR(128) NOT NULL,
  "intValue" integer DEFAULT NULL,
  "floatValue" float DEFAULT NULL,
  "stringValue" character varying DEFAULT NULL,
  "timestampValue" timestamp,
  "booleanValue" SMALLINT DEFAULT NULL,
  "created" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "createdBy" VARCHAR(128) NOT NULL,
  "modified" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "modifiedBy" VARCHAR(128) NOT NULL
);;

ALTER TABLE "DATASET_PARAM"
  ADD CONSTRAINT "pk1_DATASET_PARAM" PRIMARY KEY ("id"),
  ADD CONSTRAINT "uk1_DATASET_PARAM" UNIQUE ("name","datasetFK"),
  ADD CONSTRAINT "fk1_DATASET_PARAM" FOREIGN KEY ("datasetFK") REFERENCES "DATASET" ("id") ON DELETE CASCADE ON UPDATE NO ACTION
;;

CREATE TRIGGER "trig1_DATASET_PARAM"
  BEFORE UPDATE ON "DATASET_PARAM"
  FOR EACH ROW
    EXECUTE PROCEDURE UPDATE_MODIFIED_FIELD()
;;

-----------------------------------------------------------------------------

CREATE VIEW "FILE_VIEW" AS 
  SELECT "DATASET_FILE_BRIDGE"."id" AS "id", "PROJECT"."name" AS "projectName", "DATASET"."name" AS "datasetName",  "FILE"."name" AS "fileName"
  FROM "PROJECT", "DATASET", "FILE", "DATASET_FILE_BRIDGE"
  WHERE "DATASET"."projectFK" = "PROJECT"."id"
  AND "DATASET_FILE_BRIDGE"."datasetFK" = "DATASET"."id"
  AND "DATASET_FILE_BRIDGE"."fileFK" = "FILE"."id"
;;

-----------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION AMI_TEST(dataset_name varchar(100))
RETURNS setof "DATASET" 
AS 
$$
   Select * 
   From "DATASET" 
   where "name" = dataset_name;
$$ LANGUAGE 'sql';;
