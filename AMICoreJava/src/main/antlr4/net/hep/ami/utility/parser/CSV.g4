/*-------------------------------------------------------------------------*/

grammar CSV;

/*-------------------------------------------------------------------------*/

options {
	language = Java;
}

/*-------------------------------------------------------------------------*/
/* CSV PARSER                                                              */
/*-------------------------------------------------------------------------*/

file returns [ List<List<String>> v ]
	@init { $v = new ArrayList<List<String>>(); }
	: (BREAK | row { $v.add($row.v); } BREAK)* (EOF | row { $v.add($row.v); } EOF)
	;

/*-------------------------------------------------------------------------*/

row returns [ List<String> v ]
	@init { $v = new ArrayList<String>(); }
	: field { $v.add($field.v); } (',' (field { $v.add($field.v); } | { $v.add(""); }))*
	|       { $v.add(   ""   ); } (',' (field { $v.add($field.v); } | { $v.add(""); }))+
	;

/*-------------------------------------------------------------------------*/

field returns [ String v ]
	: STRING { $v = Utility.parseString($STRING.text); }
	| VALUE { $v = /*---------------*/($VALUE.text); }
	;

/*-------------------------------------------------------------------------*/
/* CSV LEXER                                                               */
/*-------------------------------------------------------------------------*/

STRING
	: '"' (ESC | '""' | ~["\\])* '"'
	| '\'' (ESC | '\'\'' | ~['\\])* '\''
	;

VALUE
	: ~[,"'# \n\r\t]+
	;

BREAK
	: '\r' '\n'
	| '\r'
	| '\n'
	;

/*-------------------------------------------------------------------------*/

COMMENT
	: '#' ~[\n\r]* -> skip
	;

WS
	: [ \t]+ -> skip
	;

/*-------------------------------------------------------------------------*/

fragment ESC
	: '\\' (["'/\\\b\f\n\r\t] | 'u' HEX HEX HEX HEX)
	;

fragment HEX
	: [a-fA-F0-9]
	;

/*-------------------------------------------------------------------------*/
