// Generated from /home/lambert/IdeaProjects/AMICore/AMICoreJava/src/main/antlr4/net/hep/ami/jdbc/query/mql/MQL.g4 by ANTLR 4.7.2
package net.hep.ami.jdbc.query.mql;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MQLLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, SELECT=12, DISTINCT=13, AS=14, WHERE=15, GROUP=16, 
		ORDER=17, BY=18, ASC=19, DESC=20, LIMIT=21, OFFSET=22, INSERT=23, UPDATE=24, 
		VALUES=25, DELETE=26, OR=27, XOR=28, AND=29, COMP=30, NOT=31, IN=32, IS=33, 
		PLUS=34, MINUS=35, MUL=36, DIV=37, MOD=38, FUNCTION=39, NULL=40, CURRENT_TIMESTAMP=41, 
		STRING=42, PARAMETER=43, NUMBER=44, ID=45, COMMENT=46, WS=47;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "SELECT", "DISTINCT", "AS", "WHERE", "GROUP", "ORDER", 
			"BY", "ASC", "DESC", "LIMIT", "OFFSET", "INSERT", "UPDATE", "VALUES", 
			"DELETE", "OR", "XOR", "AND", "COMP", "NOT", "IN", "IS", "PLUS", "MINUS", 
			"MUL", "DIV", "MOD", "FUNCTION", "NULL", "CURRENT_TIMESTAMP", "STRING", 
			"PARAMETER", "NUMBER", "ID", "COMMENT", "WS", "A", "B", "C", "D", "E", 
			"F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", 
			"T", "U", "V", "W", "X", "Y", "Z", "INT", "EXP"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "';'", "','", "'('", "')'", "'['", "']'", "'{'", "'}'", "'!'", 
			"'#'", "'.'", null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			"'+'", "'-'", "'*'", "'/'", "'%'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			"SELECT", "DISTINCT", "AS", "WHERE", "GROUP", "ORDER", "BY", "ASC", "DESC", 
			"LIMIT", "OFFSET", "INSERT", "UPDATE", "VALUES", "DELETE", "OR", "XOR", 
			"AND", "COMP", "NOT", "IN", "IS", "PLUS", "MINUS", "MUL", "DIV", "MOD", 
			"FUNCTION", "NULL", "CURRENT_TIMESTAMP", "STRING", "PARAMETER", "NUMBER", 
			"ID", "COMMENT", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public MQLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MQL.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 26:
			OR_action((RuleContext)_localctx, actionIndex);
			break;
		case 27:
			XOR_action((RuleContext)_localctx, actionIndex);
			break;
		case 28:
			AND_action((RuleContext)_localctx, actionIndex);
			break;
		case 29:
			COMP_action((RuleContext)_localctx, actionIndex);
			break;
		}
	}
	private void OR_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:
			 setText("OR"); 
			break;
		}
	}
	private void XOR_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1:
			 setText("XOR"); 
			break;
		}
	}
	private void AND_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2:
			 setText("AND"); 
			break;
		}
	}
	private void COMP_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 3:
			 setText("!="); 
			break;
		case 4:
			 setText("!="); 
			break;
		}
	}

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\61\u0277\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t"+
		"=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4"+
		"I\tI\4J\tJ\4K\tK\4L\tL\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7"+
		"\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r"+
		"\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3\20"+
		"\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22"+
		"\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25"+
		"\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32"+
		"\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34"+
		"\3\34\3\34\3\34\3\34\3\34\3\34\5\34\u0111\n\34\3\35\3\35\3\35\3\35\3\35"+
		"\3\35\3\35\3\35\5\35\u011b\n\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36"+
		"\5\36\u0125\n\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\3\37\5\37\u0146\n\37\3 \3 \3 \3 \3!\3!\3!\3"+
		"\"\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3("+
		"\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3("+
		"\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3("+
		"\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3("+
		"\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3("+
		"\6(\u01c1\n(\r(\16(\u01c2\5(\u01c5\n(\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3"+
		"*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\7+\u01e2\n+\f+\16+\u01e5"+
		"\13+\3+\3+\3,\3,\3,\3,\3,\3,\3,\3,\3,\5,\u01f2\n,\3-\5-\u01f5\n-\3-\3"+
		"-\3-\6-\u01fa\n-\r-\16-\u01fb\3-\5-\u01ff\n-\3-\5-\u0202\n-\3-\3-\3-\3"+
		"-\5-\u0208\n-\3-\5-\u020b\n-\3.\3.\7.\u020f\n.\f.\16.\u0212\13.\3.\3."+
		"\3.\3.\6.\u0218\n.\r.\16.\u0219\3.\3.\3.\3.\3.\6.\u0221\n.\r.\16.\u0222"+
		"\3.\5.\u0226\n.\3/\3/\3/\7/\u022b\n/\f/\16/\u022e\13/\3/\3/\3\60\6\60"+
		"\u0233\n\60\r\60\16\60\u0234\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3"+
		"\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67\38\38\39\39\3:\3:\3;\3;\3<\3<\3"+
		"=\3=\3>\3>\3?\3?\3@\3@\3A\3A\3B\3B\3C\3C\3D\3D\3E\3E\3F\3F\3G\3G\3H\3"+
		"H\3I\3I\3J\3J\3K\6K\u026e\nK\rK\16K\u026f\3L\3L\5L\u0274\nL\3L\3L\2\2"+
		"M\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20"+
		"\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37"+
		"= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\2c\2e\2g\2i\2k\2m\2o\2q\2"+
		"s\2u\2w\2y\2{\2}\2\177\2\u0081\2\u0083\2\u0085\2\u0087\2\u0089\2\u008b"+
		"\2\u008d\2\u008f\2\u0091\2\u0093\2\u0095\2\u0097\2\3\2&\4\2>>@@\5\2C\\"+
		"aac|\3\2))\7\2%&\62;C\\aac|\3\2bb\3\2$$\4\2\f\f\17\17\5\2\13\f\17\17\""+
		"\"\4\2CCcc\4\2DDdd\4\2EEee\4\2FFff\4\2GGgg\4\2HHhh\4\2IIii\4\2JJjj\4\2"+
		"KKkk\4\2LLll\4\2MMmm\4\2NNnn\4\2OOoo\4\2PPpp\4\2QQqq\4\2RRrr\4\2SSss\4"+
		"\2TTtt\4\2UUuu\4\2VVvv\4\2WWww\4\2XXxx\4\2YYyy\4\2ZZzz\4\2[[{{\4\2\\\\"+
		"||\3\2\62;\4\2--//\2\u0291\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2"+
		"\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2"+
		"\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3"+
		"\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2"+
		"\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67"+
		"\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2"+
		"\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2"+
		"\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]"+
		"\3\2\2\2\2_\3\2\2\2\3\u0099\3\2\2\2\5\u009b\3\2\2\2\7\u009d\3\2\2\2\t"+
		"\u009f\3\2\2\2\13\u00a1\3\2\2\2\r\u00a3\3\2\2\2\17\u00a5\3\2\2\2\21\u00a7"+
		"\3\2\2\2\23\u00a9\3\2\2\2\25\u00ab\3\2\2\2\27\u00ad\3\2\2\2\31\u00af\3"+
		"\2\2\2\33\u00b6\3\2\2\2\35\u00bf\3\2\2\2\37\u00c2\3\2\2\2!\u00c8\3\2\2"+
		"\2#\u00ce\3\2\2\2%\u00d4\3\2\2\2\'\u00d7\3\2\2\2)\u00db\3\2\2\2+\u00e0"+
		"\3\2\2\2-\u00e6\3\2\2\2/\u00ed\3\2\2\2\61\u00f4\3\2\2\2\63\u00fb\3\2\2"+
		"\2\65\u0102\3\2\2\2\67\u0110\3\2\2\29\u011a\3\2\2\2;\u0124\3\2\2\2=\u0145"+
		"\3\2\2\2?\u0147\3\2\2\2A\u014b\3\2\2\2C\u014e\3\2\2\2E\u0151\3\2\2\2G"+
		"\u0153\3\2\2\2I\u0155\3\2\2\2K\u0157\3\2\2\2M\u0159\3\2\2\2O\u01c4\3\2"+
		"\2\2Q\u01c6\3\2\2\2S\u01cb\3\2\2\2U\u01dd\3\2\2\2W\u01f1\3\2\2\2Y\u020a"+
		"\3\2\2\2[\u0225\3\2\2\2]\u0227\3\2\2\2_\u0232\3\2\2\2a\u0238\3\2\2\2c"+
		"\u023a\3\2\2\2e\u023c\3\2\2\2g\u023e\3\2\2\2i\u0240\3\2\2\2k\u0242\3\2"+
		"\2\2m\u0244\3\2\2\2o\u0246\3\2\2\2q\u0248\3\2\2\2s\u024a\3\2\2\2u\u024c"+
		"\3\2\2\2w\u024e\3\2\2\2y\u0250\3\2\2\2{\u0252\3\2\2\2}\u0254\3\2\2\2\177"+
		"\u0256\3\2\2\2\u0081\u0258\3\2\2\2\u0083\u025a\3\2\2\2\u0085\u025c\3\2"+
		"\2\2\u0087\u025e\3\2\2\2\u0089\u0260\3\2\2\2\u008b\u0262\3\2\2\2\u008d"+
		"\u0264\3\2\2\2\u008f\u0266\3\2\2\2\u0091\u0268\3\2\2\2\u0093\u026a\3\2"+
		"\2\2\u0095\u026d\3\2\2\2\u0097\u0271\3\2\2\2\u0099\u009a\7=\2\2\u009a"+
		"\4\3\2\2\2\u009b\u009c\7.\2\2\u009c\6\3\2\2\2\u009d\u009e\7*\2\2\u009e"+
		"\b\3\2\2\2\u009f\u00a0\7+\2\2\u00a0\n\3\2\2\2\u00a1\u00a2\7]\2\2\u00a2"+
		"\f\3\2\2\2\u00a3\u00a4\7_\2\2\u00a4\16\3\2\2\2\u00a5\u00a6\7}\2\2\u00a6"+
		"\20\3\2\2\2\u00a7\u00a8\7\177\2\2\u00a8\22\3\2\2\2\u00a9\u00aa\7#\2\2"+
		"\u00aa\24\3\2\2\2\u00ab\u00ac\7%\2\2\u00ac\26\3\2\2\2\u00ad\u00ae\7\60"+
		"\2\2\u00ae\30\3\2\2\2\u00af\u00b0\5\u0085C\2\u00b0\u00b1\5i\65\2\u00b1"+
		"\u00b2\5w<\2\u00b2\u00b3\5i\65\2\u00b3\u00b4\5e\63\2\u00b4\u00b5\5\u0087"+
		"D\2\u00b5\32\3\2\2\2\u00b6\u00b7\5g\64\2\u00b7\u00b8\5q9\2\u00b8\u00b9"+
		"\5\u0085C\2\u00b9\u00ba\5\u0087D\2\u00ba\u00bb\5q9\2\u00bb\u00bc\5{>\2"+
		"\u00bc\u00bd\5e\63\2\u00bd\u00be\5\u0087D\2\u00be\34\3\2\2\2\u00bf\u00c0"+
		"\5a\61\2\u00c0\u00c1\5\u0085C\2\u00c1\36\3\2\2\2\u00c2\u00c3\5\u008dG"+
		"\2\u00c3\u00c4\5o8\2\u00c4\u00c5\5i\65\2\u00c5\u00c6\5\u0083B\2\u00c6"+
		"\u00c7\5i\65\2\u00c7 \3\2\2\2\u00c8\u00c9\5m\67\2\u00c9\u00ca\5\u0083"+
		"B\2\u00ca\u00cb\5}?\2\u00cb\u00cc\5\u0089E\2\u00cc\u00cd\5\177@\2\u00cd"+
		"\"\3\2\2\2\u00ce\u00cf\5}?\2\u00cf\u00d0\5\u0083B\2\u00d0\u00d1\5g\64"+
		"\2\u00d1\u00d2\5i\65\2\u00d2\u00d3\5\u0083B\2\u00d3$\3\2\2\2\u00d4\u00d5"+
		"\5c\62\2\u00d5\u00d6\5\u0091I\2\u00d6&\3\2\2\2\u00d7\u00d8\5a\61\2\u00d8"+
		"\u00d9\5\u0085C\2\u00d9\u00da\5e\63\2\u00da(\3\2\2\2\u00db\u00dc\5g\64"+
		"\2\u00dc\u00dd\5i\65\2\u00dd\u00de\5\u0085C\2\u00de\u00df\5e\63\2\u00df"+
		"*\3\2\2\2\u00e0\u00e1\5w<\2\u00e1\u00e2\5q9\2\u00e2\u00e3\5y=\2\u00e3"+
		"\u00e4\5q9\2\u00e4\u00e5\5\u0087D\2\u00e5,\3\2\2\2\u00e6\u00e7\5}?\2\u00e7"+
		"\u00e8\5k\66\2\u00e8\u00e9\5k\66\2\u00e9\u00ea\5\u0085C\2\u00ea\u00eb"+
		"\5i\65\2\u00eb\u00ec\5\u0087D\2\u00ec.\3\2\2\2\u00ed\u00ee\5q9\2\u00ee"+
		"\u00ef\5{>\2\u00ef\u00f0\5\u0085C\2\u00f0\u00f1\5i\65\2\u00f1\u00f2\5"+
		"\u0083B\2\u00f2\u00f3\5\u0087D\2\u00f3\60\3\2\2\2\u00f4\u00f5\5\u0089"+
		"E\2\u00f5\u00f6\5\177@\2\u00f6\u00f7\5g\64\2\u00f7\u00f8\5a\61\2\u00f8"+
		"\u00f9\5\u0087D\2\u00f9\u00fa\5i\65\2\u00fa\62\3\2\2\2\u00fb\u00fc\5\u008b"+
		"F\2\u00fc\u00fd\5a\61\2\u00fd\u00fe\5w<\2\u00fe\u00ff\5\u0089E\2\u00ff"+
		"\u0100\5i\65\2\u0100\u0101\5\u0085C\2\u0101\64\3\2\2\2\u0102\u0103\5g"+
		"\64\2\u0103\u0104\5i\65\2\u0104\u0105\5w<\2\u0105\u0106\5i\65\2\u0106"+
		"\u0107\5\u0087D\2\u0107\u0108\5i\65\2\u0108\66\3\2\2\2\u0109\u010a\5}"+
		"?\2\u010a\u010b\5\u0083B\2\u010b\u0111\3\2\2\2\u010c\u010d\7~\2\2\u010d"+
		"\u010e\7~\2\2\u010e\u010f\3\2\2\2\u010f\u0111\b\34\2\2\u0110\u0109\3\2"+
		"\2\2\u0110\u010c\3\2\2\2\u01118\3\2\2\2\u0112\u0113\5\u008fH\2\u0113\u0114"+
		"\5}?\2\u0114\u0115\5\u0083B\2\u0115\u011b\3\2\2\2\u0116\u0117\7~\2\2\u0117"+
		"\u0118\7~\2\2\u0118\u0119\3\2\2\2\u0119\u011b\b\35\3\2\u011a\u0112\3\2"+
		"\2\2\u011a\u0116\3\2\2\2\u011b:\3\2\2\2\u011c\u011d\5a\61\2\u011d\u011e"+
		"\5{>\2\u011e\u011f\5g\64\2\u011f\u0125\3\2\2\2\u0120\u0121\7(\2\2\u0121"+
		"\u0122\7(\2\2\u0122\u0123\3\2\2\2\u0123\u0125\b\36\4\2\u0124\u011c\3\2"+
		"\2\2\u0124\u0120\3\2\2\2\u0125<\3\2\2\2\u0126\u0146\7?\2\2\u0127\u0128"+
		"\7>\2\2\u0128\u0129\7?\2\2\u0129\u0146\7@\2\2\u012a\u012b\7#\2\2\u012b"+
		"\u0146\7?\2\2\u012c\u012d\7`\2\2\u012d\u012e\7?\2\2\u012e\u012f\3\2\2"+
		"\2\u012f\u0146\b\37\5\2\u0130\u0131\7>\2\2\u0131\u0132\7@\2\2\u0132\u0133"+
		"\3\2\2\2\u0133\u0146\b\37\6\2\u0134\u0135\5w<\2\u0135\u0136\5q9\2\u0136"+
		"\u0137\5u;\2\u0137\u0138\5i\65\2\u0138\u0146\3\2\2\2\u0139\u013a\5\u0083"+
		"B\2\u013a\u013b\5i\65\2\u013b\u013c\5m\67\2\u013c\u013d\5i\65\2\u013d"+
		"\u013e\5\u008fH\2\u013e\u013f\5\177@\2\u013f\u0146\3\2\2\2\u0140\u0146"+
		"\t\2\2\2\u0141\u0142\7>\2\2\u0142\u0146\7?\2\2\u0143\u0144\7@\2\2\u0144"+
		"\u0146\7?\2\2\u0145\u0126\3\2\2\2\u0145\u0127\3\2\2\2\u0145\u012a\3\2"+
		"\2\2\u0145\u012c\3\2\2\2\u0145\u0130\3\2\2\2\u0145\u0134\3\2\2\2\u0145"+
		"\u0139\3\2\2\2\u0145\u0140\3\2\2\2\u0145\u0141\3\2\2\2\u0145\u0143\3\2"+
		"\2\2\u0146>\3\2\2\2\u0147\u0148\5{>\2\u0148\u0149\5}?\2\u0149\u014a\5"+
		"\u0087D\2\u014a@\3\2\2\2\u014b\u014c\5q9\2\u014c\u014d\5{>\2\u014dB\3"+
		"\2\2\2\u014e\u014f\5q9\2\u014f\u0150\5\u0085C\2\u0150D\3\2\2\2\u0151\u0152"+
		"\7-\2\2\u0152F\3\2\2\2\u0153\u0154\7/\2\2\u0154H\3\2\2\2\u0155\u0156\7"+
		",\2\2\u0156J\3\2\2\2\u0157\u0158\7\61\2\2\u0158L\3\2\2\2\u0159\u015a\7"+
		"\'\2\2\u015aN\3\2\2\2\u015b\u015c\5a\61\2\u015c\u015d\5c\62\2\u015d\u015e"+
		"\5\u0085C\2\u015e\u01c5\3\2\2\2\u015f\u0160\5a\61\2\u0160\u0161\5\u008b"+
		"F\2\u0161\u0162\5m\67\2\u0162\u01c5\3\2\2\2\u0163\u0164\5e\63\2\u0164"+
		"\u0165\5}?\2\u0165\u0166\5{>\2\u0166\u0167\5e\63\2\u0167\u0168\5a\61\2"+
		"\u0168\u0169\5\u0087D\2\u0169\u01c5\3\2\2\2\u016a\u016b\5e\63\2\u016b"+
		"\u016c\5}?\2\u016c\u016d\5\u0085C\2\u016d\u01c5\3\2\2\2\u016e\u016f\5"+
		"e\63\2\u016f\u0170\5}?\2\u0170\u0171\5\u0089E\2\u0171\u0172\5{>\2\u0172"+
		"\u0173\5\u0087D\2\u0173\u01c5\3\2\2\2\u0174\u0175\5w<\2\u0175\u0176\5"+
		"i\65\2\u0176\u0177\5{>\2\u0177\u0178\5m\67\2\u0178\u0179\5\u0087D\2\u0179"+
		"\u017a\5o8\2\u017a\u01c5\3\2\2\2\u017b\u017c\5w<\2\u017c\u017d\5}?\2\u017d"+
		"\u017e\5m\67\2\u017e\u01c5\3\2\2\2\u017f\u0180\5w<\2\u0180\u0181\5}?\2"+
		"\u0181\u0182\5\u008dG\2\u0182\u0183\5i\65\2\u0183\u0184\5\u0083B\2\u0184"+
		"\u01c5\3\2\2\2\u0185\u0186\5y=\2\u0186\u0187\5a\61\2\u0187\u0188\5\u008f"+
		"H\2\u0188\u01c5\3\2\2\2\u0189\u018a\5y=\2\u018a\u018b\5q9\2\u018b\u018c"+
		"\5{>\2\u018c\u01c5\3\2\2\2\u018d\u018e\5y=\2\u018e\u018f\5}?\2\u018f\u0190"+
		"\5g\64\2\u0190\u01c5\3\2\2\2\u0191\u0192\5\177@\2\u0192\u0193\5}?\2\u0193"+
		"\u0194\5\u008dG\2\u0194\u01c5\3\2\2\2\u0195\u0196\5\u0083B\2\u0196\u0197"+
		"\5{>\2\u0197\u0198\5g\64\2\u0198\u01c5\3\2\2\2\u0199\u019a\5\u0085C\2"+
		"\u019a\u019b\5q9\2\u019b\u019c\5{>\2\u019c\u01c5\3\2\2\2\u019d\u019e\5"+
		"\u0085C\2\u019e\u019f\5\u0081A\2\u019f\u01a0\5\u0083B\2\u01a0\u01a1\5"+
		"\u0087D\2\u01a1\u01c5\3\2\2\2\u01a2\u01a3\5\u0085C\2\u01a3\u01a4\5\u0087"+
		"D\2\u01a4\u01a5\5g\64\2\u01a5\u01a6\5g\64\2\u01a6\u01a7\5i\65\2\u01a7"+
		"\u01a8\5\u008bF\2\u01a8\u01c5\3\2\2\2\u01a9\u01aa\5\u0085C\2\u01aa\u01ab"+
		"\5\u0089E\2\u01ab\u01ac\5c\62\2\u01ac\u01ad\5\u0085C\2\u01ad\u01ae\5\u0087"+
		"D\2\u01ae\u01af\5\u0083B\2\u01af\u01c5\3\2\2\2\u01b0\u01b1\5\u0085C\2"+
		"\u01b1\u01b2\5\u0089E\2\u01b2\u01b3\5y=\2\u01b3\u01c5\3\2\2\2\u01b4\u01b5"+
		"\5\u0089E\2\u01b5\u01b6\5\177@\2\u01b6\u01b7\5\177@\2\u01b7\u01b8\5i\65"+
		"\2\u01b8\u01b9\5\u0083B\2\u01b9\u01c5\3\2\2\2\u01ba\u01bb\5s:\2\u01bb"+
		"\u01bc\5\u0085C\2\u01bc\u01bd\5}?\2\u01bd\u01be\5{>\2\u01be\u01c0\7a\2"+
		"\2\u01bf\u01c1\t\3\2\2\u01c0\u01bf\3\2\2\2\u01c1\u01c2\3\2\2\2\u01c2\u01c0"+
		"\3\2\2\2\u01c2\u01c3\3\2\2\2\u01c3\u01c5\3\2\2\2\u01c4\u015b\3\2\2\2\u01c4"+
		"\u015f\3\2\2\2\u01c4\u0163\3\2\2\2\u01c4\u016a\3\2\2\2\u01c4\u016e\3\2"+
		"\2\2\u01c4\u0174\3\2\2\2\u01c4\u017b\3\2\2\2\u01c4\u017f\3\2\2\2\u01c4"+
		"\u0185\3\2\2\2\u01c4\u0189\3\2\2\2\u01c4\u018d\3\2\2\2\u01c4\u0191\3\2"+
		"\2\2\u01c4\u0195\3\2\2\2\u01c4\u0199\3\2\2\2\u01c4\u019d\3\2\2\2\u01c4"+
		"\u01a2\3\2\2\2\u01c4\u01a9\3\2\2\2\u01c4\u01b0\3\2\2\2\u01c4\u01b4\3\2"+
		"\2\2\u01c4\u01ba\3\2\2\2\u01c5P\3\2\2\2\u01c6\u01c7\5{>\2\u01c7\u01c8"+
		"\5\u0089E\2\u01c8\u01c9\5w<\2\u01c9\u01ca\5w<\2\u01caR\3\2\2\2\u01cb\u01cc"+
		"\5e\63\2\u01cc\u01cd\5\u0089E\2\u01cd\u01ce\5\u0083B\2\u01ce\u01cf\5\u0083"+
		"B\2\u01cf\u01d0\5i\65\2\u01d0\u01d1\5{>\2\u01d1\u01d2\5\u0087D\2\u01d2"+
		"\u01d3\7a\2\2\u01d3\u01d4\5\u0087D\2\u01d4\u01d5\5q9\2\u01d5\u01d6\5y"+
		"=\2\u01d6\u01d7\5i\65\2\u01d7\u01d8\5\u0085C\2\u01d8\u01d9\5\u0087D\2"+
		"\u01d9\u01da\5a\61\2\u01da\u01db\5y=\2\u01db\u01dc\5\177@\2\u01dcT\3\2"+
		"\2\2\u01dd\u01e3\7)\2\2\u01de\u01df\7)\2\2\u01df\u01e2\7)\2\2\u01e0\u01e2"+
		"\n\4\2\2\u01e1\u01de\3\2\2\2\u01e1\u01e0\3\2\2\2\u01e2\u01e5\3\2\2\2\u01e3"+
		"\u01e1\3\2\2\2\u01e3\u01e4\3\2\2\2\u01e4\u01e6\3\2\2\2\u01e5\u01e3\3\2"+
		"\2\2\u01e6\u01e7\7)\2\2\u01e7V\3\2\2\2\u01e8\u01e9\7A\2\2\u01e9\u01ea"+
		"\7%\2\2\u01ea\u01eb\3\2\2\2\u01eb\u01f2\5\u0095K\2\u01ec\u01ed\7A\2\2"+
		"\u01ed\u01f2\5\u0095K\2\u01ee\u01ef\7A\2\2\u01ef\u01f2\7%\2\2\u01f0\u01f2"+
		"\7A\2\2\u01f1\u01e8\3\2\2\2\u01f1\u01ec\3\2\2\2\u01f1\u01ee\3\2\2\2\u01f1"+
		"\u01f0\3\2\2\2\u01f2X\3\2\2\2\u01f3\u01f5\7/\2\2\u01f4\u01f3\3\2\2\2\u01f4"+
		"\u01f5\3\2\2\2\u01f5\u01f6\3\2\2\2\u01f6\u01f7\5\u0095K\2\u01f7\u01f9"+
		"\7\60\2\2\u01f8\u01fa\5\u0095K\2\u01f9\u01f8\3\2\2\2\u01fa\u01fb\3\2\2"+
		"\2\u01fb\u01f9\3\2\2\2\u01fb\u01fc\3\2\2\2\u01fc\u01fe\3\2\2\2\u01fd\u01ff"+
		"\5\u0097L\2\u01fe\u01fd\3\2\2\2\u01fe\u01ff\3\2\2\2\u01ff\u020b\3\2\2"+
		"\2\u0200\u0202\7/\2\2\u0201\u0200\3\2\2\2\u0201\u0202\3\2\2\2\u0202\u0203"+
		"\3\2\2\2\u0203\u0204\5\u0095K\2\u0204\u0205\5\u0097L\2\u0205\u020b\3\2"+
		"\2\2\u0206\u0208\7/\2\2\u0207\u0206\3\2\2\2\u0207\u0208\3\2\2\2\u0208"+
		"\u0209\3\2\2\2\u0209\u020b\5\u0095K\2\u020a\u01f4\3\2\2\2\u020a\u0201"+
		"\3\2\2\2\u020a\u0207\3\2\2\2\u020bZ\3\2\2\2\u020c\u0210\t\3\2\2\u020d"+
		"\u020f\t\5\2\2\u020e\u020d\3\2\2\2\u020f\u0212\3\2\2\2\u0210\u020e\3\2"+
		"\2\2\u0210\u0211\3\2\2\2\u0211\u0226\3\2\2\2\u0212\u0210\3\2\2\2\u0213"+
		"\u0217\7b\2\2\u0214\u0215\7b\2\2\u0215\u0218\7b\2\2\u0216\u0218\n\6\2"+
		"\2\u0217\u0214\3\2\2\2\u0217\u0216\3\2\2\2\u0218\u0219\3\2\2\2\u0219\u0217"+
		"\3\2\2\2\u0219\u021a\3\2\2\2\u021a\u021b\3\2\2\2\u021b\u0226\7b\2\2\u021c"+
		"\u0220\7$\2\2\u021d\u021e\7$\2\2\u021e\u0221\7$\2\2\u021f\u0221\n\7\2"+
		"\2\u0220\u021d\3\2\2\2\u0220\u021f\3\2\2\2\u0221\u0222\3\2\2\2\u0222\u0220"+
		"\3\2\2\2\u0222\u0223\3\2\2\2\u0223\u0224\3\2\2\2\u0224\u0226\7$\2\2\u0225"+
		"\u020c\3\2\2\2\u0225\u0213\3\2\2\2\u0225\u021c\3\2\2\2\u0226\\\3\2\2\2"+
		"\u0227\u0228\7/\2\2\u0228\u022c\7/\2\2\u0229\u022b\n\b\2\2\u022a\u0229"+
		"\3\2\2\2\u022b\u022e\3\2\2\2\u022c\u022a\3\2\2\2\u022c\u022d\3\2\2\2\u022d"+
		"\u022f\3\2\2\2\u022e\u022c\3\2\2\2\u022f\u0230\b/\7\2\u0230^\3\2\2\2\u0231"+
		"\u0233\t\t\2\2\u0232\u0231\3\2\2\2\u0233\u0234\3\2\2\2\u0234\u0232\3\2"+
		"\2\2\u0234\u0235\3\2\2\2\u0235\u0236\3\2\2\2\u0236\u0237\b\60\7\2\u0237"+
		"`\3\2\2\2\u0238\u0239\t\n\2\2\u0239b\3\2\2\2\u023a\u023b\t\13\2\2\u023b"+
		"d\3\2\2\2\u023c\u023d\t\f\2\2\u023df\3\2\2\2\u023e\u023f\t\r\2\2\u023f"+
		"h\3\2\2\2\u0240\u0241\t\16\2\2\u0241j\3\2\2\2\u0242\u0243\t\17\2\2\u0243"+
		"l\3\2\2\2\u0244\u0245\t\20\2\2\u0245n\3\2\2\2\u0246\u0247\t\21\2\2\u0247"+
		"p\3\2\2\2\u0248\u0249\t\22\2\2\u0249r\3\2\2\2\u024a\u024b\t\23\2\2\u024b"+
		"t\3\2\2\2\u024c\u024d\t\24\2\2\u024dv\3\2\2\2\u024e\u024f\t\25\2\2\u024f"+
		"x\3\2\2\2\u0250\u0251\t\26\2\2\u0251z\3\2\2\2\u0252\u0253\t\27\2\2\u0253"+
		"|\3\2\2\2\u0254\u0255\t\30\2\2\u0255~\3\2\2\2\u0256\u0257\t\31\2\2\u0257"+
		"\u0080\3\2\2\2\u0258\u0259\t\32\2\2\u0259\u0082\3\2\2\2\u025a\u025b\t"+
		"\33\2\2\u025b\u0084\3\2\2\2\u025c\u025d\t\34\2\2\u025d\u0086\3\2\2\2\u025e"+
		"\u025f\t\35\2\2\u025f\u0088\3\2\2\2\u0260\u0261\t\36\2\2\u0261\u008a\3"+
		"\2\2\2\u0262\u0263\t\37\2\2\u0263\u008c\3\2\2\2\u0264\u0265\t \2\2\u0265"+
		"\u008e\3\2\2\2\u0266\u0267\t!\2\2\u0267\u0090\3\2\2\2\u0268\u0269\t\""+
		"\2\2\u0269\u0092\3\2\2\2\u026a\u026b\t#\2\2\u026b\u0094\3\2\2\2\u026c"+
		"\u026e\t$\2\2\u026d\u026c\3\2\2\2\u026e\u026f\3\2\2\2\u026f\u026d\3\2"+
		"\2\2\u026f\u0270\3\2\2\2\u0270\u0096\3\2\2\2\u0271\u0273\t\16\2\2\u0272"+
		"\u0274\t%\2\2\u0273\u0272\3\2\2\2\u0273\u0274\3\2\2\2\u0274\u0275\3\2"+
		"\2\2\u0275\u0276\5\u0095K\2\u0276\u0098\3\2\2\2\34\2\u0110\u011a\u0124"+
		"\u0145\u01c2\u01c4\u01e1\u01e3\u01f1\u01f4\u01fb\u01fe\u0201\u0207\u020a"+
		"\u0210\u0217\u0219\u0220\u0222\u0225\u022c\u0234\u026f\u0273\b\3\34\2"+
		"\3\35\3\3\36\4\3\37\5\3\37\6\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}